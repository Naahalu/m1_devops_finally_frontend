version: 2
jobs:
  install:
    docker:
      - image: circleci/node:dubnium
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}-{{ .Environment.CACHE_VERSION }}
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}-{{ .Environment.CACHE_VERSION }}

  test:
    docker:
      - image: circleci/node:dubnium
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}-{{ .Environment.CACHE_VERSION }}
            - dependencies-
      - run:
          command: yarn e2e

  build:
    docker:
      - image: circleci/node:dubnium
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}-{{ .Environment.CACHE_VERSION }}
            - dependencies-
      - run: yarn run build
      - run: cp -r dist/ /tmp/frontend
      - persist_to_workspace:
          root: /tmp
          paths:
            - frontend

  build_and_push_docker:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and push Docker image
          command: |
            docker login -u $DOCKER_LOGIN -p $DOCKER_PWD
            docker build --cache-from=app -t app:latest .
            docker tag app $DOCKER_LOGIN/medium-frontend:$CIRCLE_BUILD_NUM
            docker tag app $DOCKER_LOGIN/medium-frontend:latest
            docker push $DOCKER_LOGIN/medium-frontend:$CIRCLE_BUILD_NUM
            docker push $DOCKER_LOGIN/medium-frontend:latest

  deploy:
    docker:
      - image: circleci/node:dubnium-browsers
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Deploy frontend
          command: |
            npx netlify-cli deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --prod --dir=/tmp/frontend

workflows:
  version: 2
  build_and_test:
    jobs:
      - install
      - build:
          requires:
            - install
      # - test:
      #     requires:
      #       - install
      - build_and_push_docker:
          requires:
            - build
      - deploy:
          requires:
            - build_and_push_docker
          filters:
            branches:
              only: master
